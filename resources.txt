inspiration = https://excalidraw.com/

https://www.w3schools.com/html/html5_canvas.asp
https://roughjs.com/

Clone this wiki locally
https://github.com/rough-stuff/rough.wiki.git

https://github.com/rough-stuff/rough/wiki
https://github.com/rough-stuff/rough/wiki#generator
https://github.com/rough-stuff/rough/wiki#options


https://www.npmjs.com/package/classnames
https://www.npmjs.com/package/react-icons
https://react-icons.github.io/react-icons/


rectangle (x, y, width, height [, options])
Draws a rectangle with the top-left corner at (x, y) with the specified width and height

seed
An optional numeric value that sets the seed for creating random values used in shape generation. 
This is useful for creating the exact shape when re-generating with the same parameters. 
The value of seed is between 1 and 2^31. 
If seed is not defined, or set to 0, no seed is used when computing random values.



ellipse (x, y, width, height [, options])
Draws an ellipse with the center at (x, y) and the specified width and height.

You can create using ellipse only 
else
circle (x, y, diameter [, options])
Draws a circle with the center at (x, y) and the specified diameter.


when you do something that cause a visible changes to DOM ( style , content ) -> it might lead to a visible flickers using useEffect
useEffect vs useLayoutEffect
useEffect - Timing: 
useEffect runs after the render is committed to the screen. 
It doesn't block the browser paint.

DOM update -> screen render -> task ( might lead to flicker issues )


useLayoutEffect - Timing: 
useLayoutEffect runs synchronously after the render but before the browser has a chance to paint. 
This can block the paint until the effect has completed.

DOM update -> task -> screen render 


use useEffect
1. for its non-blocking nature, and reserve
2. Use this hook for most side effects, especially those that don't require immediate DOM manipulation or layout calculations.

use useLayoutEffect
1. when you need to perform side effects that must be completed before the browser paints, 
such as measuring the layout or synchronizing the UI based on layout changes.
2. useLayoutEffect for scenarios where precise DOM measurements or manipulations are necessary immediately after rendering.



linearPath (points [, options])
Draws a set of lines connecting the specified points.
points is an array of points. Each point is an array with 2 values - [x, y]
roughCanvas.linearPath([[690, 10], [790, 20], [750, 120], [690, 100]]);

Future Scope - Arrow length might look big when main line ( x1,y1 to x2,y2 ) length is small



https://www.npmjs.com/package/perfect-freehand/v/1.0.6

erase - erasing whole element
line or arrow  - if sum of distance of 2 lines ( both ends to cursor ) === line distance --->  
rectangle - get the coordinate of all 4 points and check with all 4 lines
ellipse   -  if cursor is inside the virtual rectangle in which ellipse is drew , check for that rectangle